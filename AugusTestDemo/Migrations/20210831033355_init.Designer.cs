// <auto-generated />
using System;
using AugusTestDemo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AugusTestDemo.Migrations
{
    [DbContext(typeof(MyDatabaseContext))]
    [Migration("20210831033355_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.BrandStory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandStoryImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandStoryIntroduction")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("BrandStory");
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.ColorOfTheSeason", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ColorOfTheSeasonModeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ColorOfTheSeasonModeID");

                    b.ToTable("ColorOfTheSeason");
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.ColorOfTheSeasonImage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ColorOfTheSeasonIndex")
                        .HasColumnType("int");

                    b.Property<int>("ColorOfTheSeasonModeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ColorOfTheSeasonModeID");

                    b.ToTable("ColorOfTheSeasonImage");
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.ColorOfTheSeasonMode", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ModeMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModeRule")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ColorOfTheSeasonMode");
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.CustomizedService", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomizedServiceModeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CustomizedServiceModeID");

                    b.ToTable("CustomizedService");
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.CustomizedServiceImage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomizedServiceIndex")
                        .HasColumnType("int");

                    b.Property<int>("CustomizedServiceModeID")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CustomizedServiceModeID");

                    b.ToTable("CustomizedServiceImage");
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.CustomizedServiceMode", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ModeMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModeRule")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CustomizedServiceMode");
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.DesignerManuscript", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DesignerManuscriptModeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DesignerManuscriptModeID");

                    b.ToTable("DesignerManuscript");
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.DesignerManuscriptImage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DesignerManuscriptIndex")
                        .HasColumnType("int");

                    b.Property<int>("DesignerManuscriptModeID")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DesignerManuscriptModeID");

                    b.ToTable("DesignerManuscriptImage");
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.DesignerManuscriptMode", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ModeMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModeRule")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("DesignerManuscriptMode");
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.FeatherImage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProductID");

                    b.ToTable("FeatherImage");
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.HomePage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BrandStoryID")
                        .HasColumnType("int");

                    b.Property<int?>("ColorOfTheSeasonID")
                        .HasColumnType("int");

                    b.Property<int?>("CustomizedServiceID")
                        .HasColumnType("int");

                    b.Property<int?>("DesignerManuscriptID")
                        .HasColumnType("int");

                    b.Property<int?>("LatestEventsID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BrandStoryID");

                    b.HasIndex("ColorOfTheSeasonID");

                    b.HasIndex("CustomizedServiceID");

                    b.HasIndex("DesignerManuscriptID");

                    b.HasIndex("LatestEventsID");

                    b.ToTable("HomePage");
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.LatestEvents", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LatestEventsModeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("LatestEventsModeID");

                    b.ToTable("LatestEvents");
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.LatestEventsImage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LatestEventsModeID")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("LatestEventsModeID");

                    b.ToTable("LatestEventsImage");
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.LatestEventsMode", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ModeMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModeRule")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("LatestEventsMode");
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductRule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductTypeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProductTypeID");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.ProductType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isConnectStore")
                        .HasColumnType("bit");

                    b.Property<bool>("isShowProductInfo")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("ProductType");
                });

            modelBuilder.Entity("AugusTestDemo.Models.Todo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionNote")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Todo");
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.ColorOfTheSeason", b =>
                {
                    b.HasOne("AugusTestDemo.Models.FeatherBean.ColorOfTheSeasonMode", "ColorOfTheSeasonMode")
                        .WithMany()
                        .HasForeignKey("ColorOfTheSeasonModeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ColorOfTheSeasonMode");
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.ColorOfTheSeasonImage", b =>
                {
                    b.HasOne("AugusTestDemo.Models.FeatherBean.ColorOfTheSeasonMode", null)
                        .WithMany("ColorOfTheSeasonImages")
                        .HasForeignKey("ColorOfTheSeasonModeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.CustomizedService", b =>
                {
                    b.HasOne("AugusTestDemo.Models.FeatherBean.CustomizedServiceMode", "CustomizedServiceMode")
                        .WithMany()
                        .HasForeignKey("CustomizedServiceModeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomizedServiceMode");
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.CustomizedServiceImage", b =>
                {
                    b.HasOne("AugusTestDemo.Models.FeatherBean.CustomizedServiceMode", null)
                        .WithMany("CustomizedServiceImages")
                        .HasForeignKey("CustomizedServiceModeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.DesignerManuscript", b =>
                {
                    b.HasOne("AugusTestDemo.Models.FeatherBean.DesignerManuscriptMode", "DesignerManuscriptMode")
                        .WithMany()
                        .HasForeignKey("DesignerManuscriptModeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DesignerManuscriptMode");
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.DesignerManuscriptImage", b =>
                {
                    b.HasOne("AugusTestDemo.Models.FeatherBean.DesignerManuscriptMode", null)
                        .WithMany("DesignerManuscriptImages")
                        .HasForeignKey("DesignerManuscriptModeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.FeatherImage", b =>
                {
                    b.HasOne("AugusTestDemo.Models.FeatherBean.Product", null)
                        .WithMany("FeatherImages")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.HomePage", b =>
                {
                    b.HasOne("AugusTestDemo.Models.FeatherBean.BrandStory", "BrandStory")
                        .WithMany()
                        .HasForeignKey("BrandStoryID");

                    b.HasOne("AugusTestDemo.Models.FeatherBean.ColorOfTheSeason", "ColorOfTheSeason")
                        .WithMany()
                        .HasForeignKey("ColorOfTheSeasonID");

                    b.HasOne("AugusTestDemo.Models.FeatherBean.CustomizedService", "CustomizedService")
                        .WithMany()
                        .HasForeignKey("CustomizedServiceID");

                    b.HasOne("AugusTestDemo.Models.FeatherBean.DesignerManuscript", "DesignerManuscript")
                        .WithMany()
                        .HasForeignKey("DesignerManuscriptID");

                    b.HasOne("AugusTestDemo.Models.FeatherBean.LatestEvents", "LatestEvents")
                        .WithMany()
                        .HasForeignKey("LatestEventsID");

                    b.Navigation("BrandStory");

                    b.Navigation("ColorOfTheSeason");

                    b.Navigation("CustomizedService");

                    b.Navigation("DesignerManuscript");

                    b.Navigation("LatestEvents");
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.LatestEvents", b =>
                {
                    b.HasOne("AugusTestDemo.Models.FeatherBean.LatestEventsMode", "LatestEventsMode")
                        .WithMany()
                        .HasForeignKey("LatestEventsModeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LatestEventsMode");
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.LatestEventsImage", b =>
                {
                    b.HasOne("AugusTestDemo.Models.FeatherBean.LatestEventsMode", null)
                        .WithMany("LatestEventsImages")
                        .HasForeignKey("LatestEventsModeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.Product", b =>
                {
                    b.HasOne("AugusTestDemo.Models.FeatherBean.ProductType", null)
                        .WithMany("Products")
                        .HasForeignKey("ProductTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.ColorOfTheSeasonMode", b =>
                {
                    b.Navigation("ColorOfTheSeasonImages");
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.CustomizedServiceMode", b =>
                {
                    b.Navigation("CustomizedServiceImages");
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.DesignerManuscriptMode", b =>
                {
                    b.Navigation("DesignerManuscriptImages");
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.LatestEventsMode", b =>
                {
                    b.Navigation("LatestEventsImages");
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.Product", b =>
                {
                    b.Navigation("FeatherImages");
                });

            modelBuilder.Entity("AugusTestDemo.Models.FeatherBean.ProductType", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
